version: '3'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro # docker sock
      - /srv/nginx/certs:/etc/nginx/certs
      - /srv/nginx/vhost.d:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    restart: always
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # docker sock
      - /srv/nginx/certs:/etc/nginx/certs
      - /srv/nginx/vhost.d:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
    restart: always
  frontend:
    build:
      context: ../..
      dockerfile: ./docker/prod/Dockerfile.frontend
    depends_on:
      - letsencrypt-nginx-proxy-companion
      - express
      - flask
    environment:
      - VIRTUAL_HOST=alexandersen.me
      - LETSENCRYPT_HOST=alexandersen.me
  database:
    build:
      context: ../..
      dockerfile: ./docker/prod/Dockerfile.mysql
    volumes:
      - /srv/prod/mysql:/var/lib/mysql
    env_file:
      - ../sql.env
  express:
    build:
      context: ../..
      dockerfile: ./docker/prod/Dockerfile.express
    env_file:
      - ../../api/.env
  flask:
    build:
      context: ../..
      dockerfile: ./docker/prod/Dockerfile.flask
volumes:
  nginx-proxy-html: